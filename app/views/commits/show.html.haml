.row
  .col-sm-1.d-none.d-md-block#prev-btn
    -if @previous_commit
      %a.btn.btn-outline-primary.btn-lg.btn-block{href: commit_path(branch: @selected_branch.name, sha: @previous_commit.short_sha)}
        %i.fa.fa-step-backward.text-reset
  .col-6.col-md-5.text-right
    .dropdown
      %button.btn.btn-outline-primary.btn-lg.btn-block.dropdown-toggle{type: 'button', "data-toggle".to_sym => 'dropdown', 'aria-haspopup'.to_sym => true, 'aria-expanded'.to_sym => false}
        =fa_icon 'code-fork'
        %samp#selected-branch= @selected_branch
      .dropdown-menu
        - @branches.each do |branch|
          =link_to branch, commit_path(branch: branch.name, sha: @commit.short_sha), class: "text-monospace dropdown-item" + (branch == @selected_branch ? ' selected' : '')  
  .col-6.col-md-5
    .dropdown
      %button.btn.btn-outline-primary.btn-lg.btn-block.dropdown-toggle#commit-selector{type: 'button', "data-toggle".to_sym => 'dropdown', 'aria-haspopup'.to_sym => true, 'aria-expanded'.to_sym => false}
        =fa_icon 'dot-circle-o'
        %span.h5.text-monospace#nearby-commit-center=@commit
      .dropdown-menu.dropdown-menu-right.py-0.my-0#nearby-commit-list{'aria-labelledby': 'commit-selector'}

  .col-1.d-none.d-md-block#next-btn
    -if @next_commit
      %a.btn.btn-outline-primary.btn-lg.btn-block{href: commit_path(branch: @selected_branch.name, sha: @next_commit.short_sha)}
        %i.fa.fa-step-forward.text-reset
.row.mt-5.mb-0
  .col
    %h4
      Commit data for
      %span.text-monospace.text-primary
        = @commit
        - if @commit.run_optional?
          =fa_icon('plus-square', title: 'Optional inlists run on all tests')
        -if @commit.fpe_checks?
          =fa_icon('wrench', title: 'FPE checks run on all tests')
        -if @commit.fine_resolution?
          =fa_icon('search-plus', title: 'Finer resolution')

.row.mt-0
  .col-lg-6.col-md-7
    %ul.list-group.list-group-flush.mb-1#commit-stats
      %li.list-group-item
        %b Author:
        =@commit.author
      %li.list-group-item
        %b Full SHA:
        %span.text-monospace=@commit.sha
      %li.list-group-item
        %b Added to Testhub:
        =format_time(@commit.created_at)
      %li.list-group-item
        %b Commit Time:
        =format_time(@commit.commit_time)
  .col-lg-6.col-md-5
    #commit-message
      %h4.font-weight-bold=@commit.message_first_line(100)
      %p= @commit.message_rest(100)
.row.mb-0.mt-0
  .col
    - if @commit.github_url
      %a.btn.btn-outline-primary.btn-lg.btn-block{href: @commit.github_url, target: '_blank'}
        %span.text-reset View on GitHub
.row.mt-5
  .col
    .card.border-dark
      .card-body.text-dark
        %h3.card-title Computers and Compilation
        - if @specs.empty?
          %h4.text-info.font-weight-bold No submissions for this commit.
        %dl.row.align-baseline{style: 'display: flex; align-items: center;'}
          - @specs.each do |entry|
            %dt.col-md-4
              %span.align-middle{'data-toggle' => 'tooltip', title: "#{entry[:numerator]}/#{entry[:denominator]}", width: '1.5rem'}
                -case entry[:frac] * 16
                -when 0.0
                  =render partial: 'none_tested'
                -when (0..3)
                  =render partial: 'one_eighth'
                -when (3..5)
                  =render partial: 'one_quarter'
                -when (5..7)
                  =render partial: 'three_eighths'
                -when (7..9)
                  =render partial: 'one_half'
                -when (9..11)
                  =render partial: 'five_eighths'
                -when (11..13)
                  =render partial: 'three_quarters'
                -when (13...16)
                  =render partial: 'seven_eighths'
                -else
                  =render partial: 'complete'
              =link_to(entry[:computer].name, user_computer_path(entry[:computer].user, entry[:computer]), class: 'text-primary')
              = surround '(', ')' do
                %a{href: user_path(entry[:computer].user), class: 'text-primary'}=entry[:computer].user.name

            %dd.col-md-5.offset-md-0.offset-1.align-middle=entry[:spec]
            %dd.col-md-3.offset-md-0.offset-1
              %span.align-middle
                Compilation: 
                - case entry[:compilation]
                - when :unknown
                  %span.font-weight-bold.text-info Unknown
                - when :success
                  %span.font-weight-bold.text-success Succeeded
                - when :failure
                  %span.font-weight-bold.text-danger.my-2 Failed
                  %a.text-reset.d-none.build-log-link{href: "https://logs.mesastar.org/#{@commit.sha}/#{entry[:computer].name}/build.log", target:'_blank', 'data-commit': @commit.sha, 'data-computer': entry[:computer].name}
                    %button.btn.btn-light.btn-sm
                      %i.fa.fa-file-text-o
                - when :mixed
                  %span.font-weight-bold.text-warning.my-2 Mixed
                  %a.text-reset.d-none.build-log-link{href: "https://logs.mesastar.org/#{@commit.sha}/#{entry[:computer].name}/build.log", target:'_blank', 'data-commit': @commit.sha, 'data-computer': entry[:computer].name}
                    %button.btn.btn-light.btn-sm{'data-toggle' => 'modal', 'data-target' => '#buildModal'}
                      %i.fa.fa-file-text-o
                - else
                  %span.h5.font-weight-bold.text-primary Testhub Error

.row.row-cols-1.row-cols-sm-2.row-cols-md-3.row-cols-lg-4.row-cols-xl-5#index-desc
  - if @others.count.positive?
    .col.mb-4
      .card.border-info.h-100
        .card-body.text-info                    
          %h3.card-title Untested
          %p.card-text
            %b=@others.count
            tests with no submission data.
  - if @mixed.count.positive?
    .col.mb-4
      .card.border-warning.h-100
        .card-body.text-warning
          %h3.card-title Mixed
          %p.card-text
            %b=@mixed.count
            tests where some computers report passing and others report failing.
  - if @checksums.count.positive?
    .col.mb-4
      .card.border-primary.h-100
        .card-body.text-primary
          %h3.card-title Checksums
          %p.card-text
            %b=@checksums.count
            tests where different computers give different checksums.
  - if @failing.count.positive?
    .col.mb-4
      .card.border-danger.h-100
        .card-body.text-danger
          %h3.card-title Failing
          %p.card-text
            %b=@failing.count
            tests where all computers report failing.
  - if @passing.count.positive?
    .col.mb-4
      .card.border-success.h-100
        .card-body.text-success
          %h4.card-title Passing
          %p.card-text
            %b=@passing.count
            tests where all computers report passing.
.row
  .col
    %ul.list-group
      - @mixed.each do |tcc|
        - cache tcc do
          %li.list-group-item.list-group-item-action.list-group-item-warning
            .d-flex.w-100.mb-0.justify-content-between
              = render partial: "badges", locals: { tcc: tcc }
            = render partial: "failures", locals: { tcc: tcc }
            = render partial: "checksums", locals: { tcc: tcc }
      - @checksums.each do |tcc|
        - cache tcc do
          %li.list-group-item.list-group-item-action.list-group-item-primary
            .d-flex.w-100.mb-0.justify-content-between
              = render partial: "badges", locals: { tcc: tcc }
            = render partial: "checksums", locals: { tcc: tcc }
      - @failing.each do |tcc|
        - cache tcc do
          %li.list-group-item.list-group-item-action.list-group-item-danger
            .d-flex.w-100.mb-0.justify-content-between
              = render partial: "badges", locals: { tcc: tcc }
            = render partial: "failures", locals: { tcc: tcc }
    - if @others.length > 0 || @passing.length > 0
      .text-center.my-4
        - if @others.length > 0
          %button.btn.btn-lg.btn-info#toggle-missing{'data-target'.to_sym => '#missing', 'data-toggle'.to_sym => 'collapse', role: :button}
            %span#missing-action Show
            =@others.count
            Untested
        - if @passing.length > 0
          %button.btn.btn-lg.btn-success#toggle-passing{'data-target'.to_sym => '#passing', 'data-toggle'.to_sym => 'collapse', role: :button}
            %span#passing-action Show
            =@passing.count
            Passing

    %ul.list-group.collapse.mb-5#missing
      - @others.each do |tcc|
        - cache tcc do
          %li.list-group-item.list-group-item-action.list-group-item-info
            .d-flex.w-100.justify-content-between
              %h5
                %span.text-monospace=link_to tcc.test_case.name, test_case_commit_path(branch: params[:branch], sha: @commit.short_sha, test_case: tcc.test_case.name, module: tcc.test_case.module), class: 'stretched-link text-reset no-hover'
                %span.small.muted
                  =surround '(', ')' do
                    %span.text-monospace=tcc.test_case.module
    %ul.list-group.collapse.mb-5#passing
      - @passing.each do |tcc|
        - cache tcc do
          %li.list-group-item.list-group-item-action.list-group-item-success
            .d-flex.w-100.mb-0.justify-content-between.mb-0
              = render partial: "badges", locals: { tcc: tcc }

-#  .row
-#    .col
-#      .table-responsive
-#        %table.table.table-hover#test_summary
-#          %thead.thead-default
-#            %tr
-#              %th Name
-#              %th Computers Tested
-#              %th Last Tested Date
-#              -# %th Diff?
-#
-#          %tbody
-#            - @test_case_commits.each do |tcc|
-#              %tr{class: @row_classes[tcc] + ' clickable-row', "data-href":-#test_case_commit_path(number: @selected, test_case: tcc.-#test_case.name), id: tcc.test_case.name + '-row'}
-#                %td
-#                  %samp= tcc.test_case.name
-#                - if @selected == 'all'
-#                  %td= @last_commits[tcc]
-#                - else
-#                  %td= tcc.computer_count
-#                  %td= format_time(@last_tested[tcc]) #.localtime.strftime("%F %H:%M %Z")
                -# %td
                -#   - case @diffs[test_case]
                -#   - when 0
                -#     &#x2717
                -#   - when 1
                -#     &#x2713
                -#   - else
                -#     &#x3f
  -# .row
  -#   .col.text-center
  -#     - if admin?
  -#       =link_to "Create Test Case", new_test_case_path, class: 'btn btn-lg btn-primary text-light'
